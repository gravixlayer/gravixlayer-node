name: Manual Release and Publish

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
      release_notes:
        description: 'Release notes (optional - will use latest commit message if empty)'
        required: false
        default: ''

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

    - name: Bump version
      run: |
        npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Prepare release notes
      id: release_notes
      run: |
        if [ -n "${{ github.event.inputs.release_notes }}" ]; then
          echo "FINAL_RELEASE_NOTES=${{ github.event.inputs.release_notes }}" >> $GITHUB_ENV
        else
          COMMIT_MSG="$(git log -1 --pretty=%B)"
          CLEAN_MSG=$(echo "$COMMIT_MSG" | sed 's/^[a-z]*: *//' | sed 's/^[A-Z]/\L&/')
          echo "FINAL_RELEASE_NOTES=$CLEAN_MSG" >> $GITHUB_ENV
        fi

    - name: Create GitHub Release
      run: |
        gh release create "v$NEW_VERSION" \
          --title "Release v$NEW_VERSION" \
          --notes "$FINAL_RELEASE_NOTES" \
          --latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.NEW_VERSION }}
        release_name: Release v${{ env.NEW_VERSION }}
        body: ${{ env.FINAL_RELEASE_NOTES }}
        draft: false
        prerelease: false

    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}